-- MySQL Script generated by MySQL Workbench
-- Tue Dec 19 16:45:33 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Hospital
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Hospital
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Hospital` DEFAULT CHARACTER SET utf8 ;
USE `Hospital` ;

-- -----------------------------------------------------
-- Table `Hospital`.`specialization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`specialization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`medical_worker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`medical_worker` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `specialization_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `specialization_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_medical_worker_user1_idx` (`user_id` ASC),
  INDEX `fk_medical_worker_specialization2_idx` (`specialization_id` ASC),
  CONSTRAINT `fk_medical_worker_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Hospital`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medical_worker_specialization2`
    FOREIGN KEY (`specialization_id`)
    REFERENCES `Hospital`.`specialization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`qualification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`qualification` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`doctor` (
  `medical_worker_id` INT NOT NULL,
  `license` VARCHAR(45) NOT NULL,
  `qualification_id` INT NOT NULL,
  PRIMARY KEY (`medical_worker_id`, `qualification_id`),
  UNIQUE INDEX `medical_worker_id_UNIQUE` (`medical_worker_id` ASC),
  INDEX `fk_doctor_qualification1_idx` (`qualification_id` ASC),
  CONSTRAINT `fk_doctor_medical_worker`
    FOREIGN KEY (`medical_worker_id`)
    REFERENCES `Hospital`.`medical_worker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctor_qualification1`
    FOREIGN KEY (`qualification_id`)
    REFERENCES `Hospital`.`qualification` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`position`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`position` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(200) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`nurse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`nurse` (
  `medical_worker_id` INT NOT NULL,
  `position_id` INT NOT NULL,
  PRIMARY KEY (`medical_worker_id`, `position_id`),
  INDEX `fk_nurse_position1_idx` (`position_id` ASC),
  CONSTRAINT `fk_nurse_medical_worker1`
    FOREIGN KEY (`medical_worker_id`)
    REFERENCES `Hospital`.`medical_worker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_nurse_position1`
    FOREIGN KEY (`position_id`)
    REFERENCES `Hospital`.`position` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`tablets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`tablets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idtabletsid_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`category_of_disease`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`category_of_disease` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`disease`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`disease` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `category_of_disease_id` INT NOT NULL,
  PRIMARY KEY (`id`, `category_of_disease_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_disease_category_of_disease1_idx` (`category_of_disease_id` ASC),
  CONSTRAINT `fk_disease_category_of_disease1`
    FOREIGN KEY (`category_of_disease_id`)
    REFERENCES `Hospital`.`category_of_disease` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`user_login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`user_login` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_login` VARCHAR(45) NOT NULL,
  `user_password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `user_login_UNIQUE` (`user_login` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`patient` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `diagnosis` VARCHAR(255) NULL,
  `patient_status_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `patient_status_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_patient_user1_idx` (`user_id` ASC),
  INDEX `fk_patient_patient_status1_idx` (`patient_status_id` ASC),
  CONSTRAINT `fk_patient_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Hospital`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_patient_status1`
    FOREIGN KEY (`patient_status_id`)
    REFERENCES `Hospital`.`patient_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`procedure`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`procedure` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`operations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`operations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`appointment` (
  `id` INT NOT NULL,
  `medical_worker_id` INT NOT NULL,
  `type_of_treatment_id` INT NOT NULL,
  `date` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `medical_worker_id`, `type_of_treatment_id`),
  INDEX `fk_appointment_medical_worker2_idx` (`medical_worker_id` ASC),
  INDEX `fk_appointment_type_of_treatment1_idx` (`type_of_treatment_id` ASC),
  CONSTRAINT `fk_appointment_medical_worker2`
    FOREIGN KEY (`medical_worker_id`)
    REFERENCES `Hospital`.`medical_worker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_type_of_treatment1`
    FOREIGN KEY (`type_of_treatment_id`)
    REFERENCES `Hospital`.`type_of_treatment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(16) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`, `role_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_user_role1_idx` (`role_id` ASC),
  CONSTRAINT `fk_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `Hospital`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Hospital`.`specialization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`specialization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`patient_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`patient_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`patient` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `diagnosis` VARCHAR(255) NULL,
  `patient_status_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `patient_status_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_patient_user1_idx` (`user_id` ASC),
  INDEX `fk_patient_patient_status1_idx` (`patient_status_id` ASC),
  CONSTRAINT `fk_patient_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Hospital`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_patient_status1`
    FOREIGN KEY (`patient_status_id`)
    REFERENCES `Hospital`.`patient_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`type_of_treatment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`type_of_treatment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idtype_of_treatment_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`medical_worker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`medical_worker` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `specialization_id` INT NOT NULL,
  PRIMARY KEY (`id`, `user_id`, `specialization_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_medical_worker_user1_idx` (`user_id` ASC),
  INDEX `fk_medical_worker_specialization2_idx` (`specialization_id` ASC),
  CONSTRAINT `fk_medical_worker_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Hospital`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medical_worker_specialization2`
    FOREIGN KEY (`specialization_id`)
    REFERENCES `Hospital`.`specialization` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`appointment` (
  `id` INT NOT NULL,
  `medical_worker_id` INT NOT NULL,
  `type_of_treatment_id` INT NOT NULL,
  `date` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `medical_worker_id`, `type_of_treatment_id`),
  INDEX `fk_appointment_medical_worker2_idx` (`medical_worker_id` ASC),
  INDEX `fk_appointment_type_of_treatment1_idx` (`type_of_treatment_id` ASC),
  CONSTRAINT `fk_appointment_medical_worker2`
    FOREIGN KEY (`medical_worker_id`)
    REFERENCES `Hospital`.`medical_worker` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_appointment_type_of_treatment1`
    FOREIGN KEY (`type_of_treatment_id`)
    REFERENCES `Hospital`.`type_of_treatment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Hospital`.`patient_has_appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hospital`.`patient_has_appointment` (
  `patient_id` INT NOT NULL,
  `appointment_id` INT NOT NULL,
  `appointment_medical_worker_id` INT NOT NULL,
  `appointment_type_of_treatment_id` INT NOT NULL,
  PRIMARY KEY (`patient_id`, `appointment_id`, `appointment_medical_worker_id`, `appointment_type_of_treatment_id`),
  INDEX `fk_patient_has_appointment_appointment1_idx` (`appointment_id` ASC, `appointment_medical_worker_id` ASC, `appointment_type_of_treatment_id` ASC),
  INDEX `fk_patient_has_appointment_patient1_idx` (`patient_id` ASC),
  CONSTRAINT `fk_patient_has_appointment_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `Hospital`.`patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_has_appointment_appointment1`
    FOREIGN KEY (`appointment_id` , `appointment_medical_worker_id` , `appointment_type_of_treatment_id`)
    REFERENCES `Hospital`.`appointment` (`id` , `medical_worker_id` , `type_of_treatment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Hospital`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `Hospital`;
INSERT INTO `Hospital`.`role` (`id`, `name`) VALUES (0, 'admin');
INSERT INTO `Hospital`.`role` (`id`, `name`) VALUES (1, 'patient');
INSERT INTO `Hospital`.`role` (`id`, `name`) VALUES (2, 'doctor');
INSERT INTO `Hospital`.`role` (`id`, `name`) VALUES (3, 'nurse');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Hospital`.`patient_status`
-- -----------------------------------------------------
START TRANSACTION;
USE `Hospital`;
INSERT INTO `Hospital`.`patient_status` (`id`, `name`) VALUES (1, 'Waiting for diagnosis');
INSERT INTO `Hospital`.`patient_status` (`id`, `name`) VALUES (2, 'Waiting for treatment');
INSERT INTO `Hospital`.`patient_status` (`id`, `name`) VALUES (3, 'Discharge from hospital');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Hospital`.`type_of_treatment`
-- -----------------------------------------------------
START TRANSACTION;
USE `Hospital`;
INSERT INTO `Hospital`.`type_of_treatment` (`id`, `name`) VALUES (1, 'Drug');
INSERT INTO `Hospital`.`type_of_treatment` (`id`, `name`) VALUES (2, 'Procedure');
INSERT INTO `Hospital`.`type_of_treatment` (`id`, `name`) VALUES (3, 'Operation');

COMMIT;

